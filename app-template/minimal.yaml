---
apiVersion: v1
kind: Service
metadata:
  name: examples-app
  creationTimestamp: null
  labels:
    challenge.app: examples-app
spec:
  type: ClusterIP
  ports:
    - name: "web"
      port: 80
      targetPort: web # line 49
  selector:
    challenge.app: examples-app
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    challenge.app: examples-app
  name: examples-app
spec:
  replicas: 2
  selector:
    matchLabels:
      challenge.app: examples-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      labels:
        challenge.app: examples-app
        team: DevOps
    spec:
      containers:
        - name: examples-app
          envFrom:
            - configMapRef:
                name: examples-app-config
          image: dxas90/network-stats:cgi # original imagen just in case that someone needs it
          ports:
            - name: web
              containerPort: 5000 # line 11
              protocol: TCP
          resources:
            limits:
              cpu: 10m
              memory: 56Mi
            requests:
              cpu: 10m
              memory: 56Mi
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: examples-app-config # line 45
data:
  APP_ENV: prod
  INTERVAL: "30"
  MAILER_URL: "smtp://mail-server:1025"
  MONGODB_URL: "mongodb://mongodb:27017"
  REDIS_DSN: "redis://redis:6379?timeout=0.5"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: examples-app-ingress
  namespace: default
spec:
  ingressClassName: external # fix this
  rules:
    - host: examples.app.com
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: examples-app
                port:
                  number: 80
---
