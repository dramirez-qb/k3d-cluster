---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: downloads
spec:
  interval: 10m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: downloads-gateway
      namespace: vpn
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/qbittorrent
      tag: 4.5.4
    env:
      TZ: ${TIMEZONE}
      QBITTORRENT__PORT: &port 8080
      QBITTORRENT__BT_PORT: &port-bt "${SECRET_VPN_FORWARDED_PORT_1}"
    # podAnnotations:
    #   setGateway: "true"
    hostname: qbittorrent-0
    service:
      main:
        ports:
          http:
            port: *port
      bittorrent:
        enabled: true
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${SVC_QBITTTORENT_ADDR}
        labels:
          io.cilium/lb-ipam-layer2: "true"
        ports:
          bittorrent-tcp:
            enabled: true
            port: *port-bt
            protocol: TCP
            targetPort: *port-bt
          bittorrent-udp:
            enabled: true
            port: *port-bt
            protocol: UDP
            targetPort: *port-bt
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: qbittorrent.png
          gethomepage.dev/name: qBittorrent
          gethomepage.dev/group: Downloads
          gethomepage.dev/widget.type: qbittorrent
          gethomepage.dev/widget.url: http://qbittorrent.downloads.svc.cluster.local:8080
          gethomepage.dev/widget.username: "{{HOMEPAGE_VAR_QBITTORRENT_USERNAME}}"
          gethomepage.dev/widget.password: "{{HOMEPAGE_VAR_QBITTORRENT_PASSWORD}}"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_hide_header "x-webkit-csp";
            proxy_hide_header "content-security-policy";
            proxy_hide_header "X-Frame-Options";
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/qbittorrent/nord.css"></head>';
            sub_filter_once on;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    metrics:
      enabled: true
      exporter:
        image:
          repository: ghcr.io/k8s-at-home/prometheus-qbittorrent-exporter
          tag: v1.2.0
      serviceMonitor:
        interval: 1m
        scrapeTimeout: 10s
      prometheusRule:
        enabled: true
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: longhorn-config
    persistence:
      media:
        enabled: true
        existingClaim: downloads
        mountPath: /downloads
        subPath: torrents
      # incomplete:
      #   enabled: true
      #   type: emptyDir
    # affinity:
    #   podAntiAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       - labelSelector:
    #           matchExpressions:
    #             - key: app.kubernetes.io/name
    #               operator: In
    #               values: ["sabnzbd"]
    #         topologyKey: kubernetes.io/hostname
    resources:
      requests:
        cpu: 25m
        memory: 1G
      limits:
        memory: 3G
    sidecars:
      reannounce:
        image: ghcr.io/buroa/qbittools:v0.1.1
        imagePullPolicy: IfNotPresent
        args: ["reannounce", "-s", "localhost", "-p", "8080"]
