---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
  labels:
    app: vaultwarden
  namespace: security
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: vaultwarden
          image: docker.io/vaultwarden/server:1.27.0
          env:
            - name: DOMAIN
              value: "https://bitwarden.${SECRET_DOMAIN}"
            - name: ROCKET_PORT
              value: "8088"
            - name: WEBSOCKET_ENABLED
              value: "true"
            - name: WEBSOCKET_PORT
              value: "8089"
            - name: SHOW_PASSWORD_HINT
              value: "false"
            - name: SIGNUPS_ALLOWED
              value: "false"
            - name: INVITATIONS_ALLOWED
              value: "false"
          ports:
            - name: http
              containerPort: 8088
            - name: websocket
              containerPort: 8089
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            limits:
              cpu: 25m
              memory: 263M
            requests:
              cpu: 25m
              memory: 263M
      volumes:
        - name: data
          hostPath:
            path: /mnt/shared/vaultwarden/
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
  namespace: security
spec:
  selector:
    app: vaultwarden
  ports:
    - protocol: TCP
      port: 8088
      name: http
    - protocol: TCP
      port: 8089
      name: websocket
  clusterIP: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vaultwarden-ingress
  namespace: security
  annotations:
    nginx.ingress.kubernetes.io/server-snippet: |
      sendfile on;
      tcp_nodelay on;
      tcp_nopush on;
      location /notifications/hub {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Request-Id: $req_id";
    nginx.ingress.kubernetes.io/connection-proxy-header: "keep-alive"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/limit-connections: "25"
    nginx.ingress.kubernetes.io/limit-rps: "15"
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    external-dns.alpha.kubernetes.io/local-target: internal.${SECRET_DOMAIN}
spec:
  ingressClassName: internal-nginx
  rules:
    - host: &host bitwarden.${SECRET_DOMAIN}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: vaultwarden
                port:
                  number: 8088
          - path: /notifications/hub
            pathType: Exact
            backend:
              service:
                name: vaultwarden
                port:
                  number: 8089
  tls:
    - hosts:
        - *host
      secretName: vaultwarden-tls
